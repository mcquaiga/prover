<UserControl
	x:Class="Prover.Modules.UnionGas.Exporter.Views.VerificationsGrid"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:evcVerifications="clr-namespace:Prover.Application.Models.EvcVerifications;assembly=Prover.Application"
	xmlns:local="clr-namespace:Prover.Modules.UnionGas.Exporter.Views"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="clr-namespace:Prover.Modules.UnionGas.Models"
	xmlns:rx="http://reactiveui.net"
	x:Name="VerificationsGridControl"
	d:DataContext="{d:DesignInstance evcVerifications:EvcVerificationTest,
	                                 IsDesignTimeCreatable=False}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Prover.UI.Desktop;component/Styles/Resources.xaml" />
				<ResourceDictionary Source="/Prover.UI.Desktop;component/Styles/VerificationStyles.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style
				x:Key="VerificationsGridCellStyle"
				BasedOn="{StaticResource MaterialDesignDataGridCell}"
				TargetType="{x:Type DataGridCell}">
				<Setter Property="FontSize" Value="20" />
				<Setter Property="BorderThickness" Value="0" />
			</Style>

			<Style
				x:Key="CenteredGridCellStyle"
				BasedOn="{StaticResource VerificationsGridCellStyle}"
				TargetType="{x:Type DataGridCell}">
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="HorizontalAlignment" Value="Center" />
			</Style>

			<Style
				x:Key="FloatingActionButtonStyle"
				BasedOn="{StaticResource MaterialDesignFlatButton}"
				TargetType="{x:Type Button}">
				<Setter Property="Foreground" Value="DimGray" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Margin" Value="2,0,2,0" />
				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
			</Style>

			<Style x:Key="FloatingActionButtonPackIconStyle" TargetType="materialDesign:PackIcon">
				<Setter Property="Height" Value="36" />
				<Setter Property="Width" Value="36" />
				<Setter Property="HorizontalAlignment" Value="Center" />
			</Style>

			<Style
				x:Key="DataGridColumnHeadersStyle"
				BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}"
				TargetType="{x:Type DataGridColumnHeader}">
				<Setter Property="Margin" Value="8,2" />
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="FontSize" Value="18" />
			</Style>

			<Style
				x:Key="DataGridRowStyle"
				BasedOn="{StaticResource MaterialDesignDataGridRow}"
				TargetType="{x:Type DataGridRow}">

				<Setter Property="HorizontalAlignment" Value="Center" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="VerticalContentAlignment" Value="Top" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="FontSize" Value="20" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Cursor" Value="Hand" />
					</Trigger>
					<!--<Trigger Property="IsSelected" Value="True">
                            <Setter Property="DetailsVisibility" Value="Visible" />
                        </Trigger>-->
				</Style.Triggers>

			</Style>
			<DataTemplate x:Key="ActionMenuItemsPopupBox" DataType="{x:Type local:ExportToolbarViewModel}">
				<materialDesign:PopupBox x:Name="RowPopupBox" DataContext="{Binding ToolbarViewModel, ElementName=VerificationsGridControl}">
					<StackPanel
						x:Name="ActionButtonsSection"
						Margin="5"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Orientation="Horizontal">
						<Button
							x:Name="PrintTestReportButton"
							Command="{Binding PrintReport}"
							CommandParameter="{Binding Path=Item, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
							Style="{StaticResource FloatingActionButtonStyle}"
							ToolTip="View QA Test Report">
							<StackPanel>
								<materialDesign:PackIcon Kind="FileFind" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
								<TextBlock>View Test</TextBlock>
							</StackPanel>

						</Button>

						<Button
							x:Name="EditJobIdButton"
							Command="{Binding AddJobId}"
							CommandParameter="{Binding Path=Item, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
							Style="{StaticResource FloatingActionButtonStyle}"
							ToolTip="Edit Job #">
							<StackPanel>
								<materialDesign:PackIcon Kind="PencilAdd" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
								<TextBlock>Add to job</TextBlock>
							</StackPanel>
						</Button>

						<Button
							x:Name="AddUserToTestButton"
							Command="{Binding AddSignedOnUser}"
							CommandParameter="{Binding Path=Item, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
							Style="{StaticResource FloatingActionButtonStyle}"
							ToolTip="Add currently signed on user">
							<StackPanel>
								<materialDesign:PackIcon Kind="AccountPlus" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
								<TextBlock>Add user</TextBlock>
							</StackPanel>

						</Button>

						<Button
							x:Name="ExportTestButton"
							Command="{Binding ExportVerification}"
							CommandParameter="{Binding Path=Item, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
							Style="{StaticResource FloatingActionButtonStyle}"
							ToolTip="Export">
							<StackPanel>
								<materialDesign:PackIcon Kind="Export" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
								<TextBlock>Export</TextBlock>
							</StackPanel>

						</Button>

						<Button
							x:Name="ArchiveTestButton"
							Command="{Binding ArchiveVerification}"
							CommandParameter="{Binding Path=Item, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
							Style="{StaticResource FloatingActionButtonStyle}"
							ToolTip="Archive Test">
							<StackPanel>
								<materialDesign:PackIcon Kind="Archive" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
								<TextBlock>Archive</TextBlock>
							</StackPanel>

						</Button>

						<Button
							x:Name="DumpTestToJsonButton"
							Command="{Binding DumpTestToJson}"
							CommandParameter="{Binding Path=Item, RelativeSource={RelativeSource AncestorType=DataGridRow}}"
							Style="{StaticResource FloatingActionButtonStyle}"
							ToolTip="Dump test to JSON">
							<StackPanel>
								<materialDesign:PackIcon Kind="DumpTruck" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
								<TextBlock>To Json</TextBlock>
							</StackPanel>

						</Button>

					</StackPanel>

				</materialDesign:PopupBox>

			</DataTemplate>
			<ControlTemplate x:Key="ActionItemPackIconControl" TargetType="materialDesign:PackIcon">
				<materialDesign:PackIcon Kind="{TemplateBinding Kind}" Style="{StaticResource FloatingActionButtonPackIconStyle}" />
			</ControlTemplate>

			<ControlTemplate x:Key="FloatingActionToolbarItem" TargetType="{x:Type Button}">
				<Button
					x:Name="ActionButton"
					Command="{TemplateBinding Command}"
					CommandParameter="{TemplateBinding CommandParameter}"
					DataContext="{TemplateBinding DataContext}"
					Style="{StaticResource FloatingActionButtonStyle}">
					<StackPanel>
						<!--<ContentControl Template="{StaticResource ActionItemPackIconControl}"/>-->
						<ContentControl Content="{TemplateBinding Content}" />
						<materialDesign:PackIcon Kind="{TemplateBinding Content}" />
						<TextBlock Text="{TemplateBinding Tag}" />
					</StackPanel>
				</Button>
			</ControlTemplate>


		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<!--
			MouseDoubleClick="VerificationsDataGrid_OnMouseDoubleClick"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Stretch"
		-->
		<DataGrid
			x:Name="VerificationsDataGrid"
			AutoGenerateColumns="False"
			CellStyle="{StaticResource VerificationsGridCellStyle}"
			ColumnHeaderStyle="{StaticResource DataGridColumnHeadersStyle}"
			EnableColumnVirtualization="True"
			EnableRowVirtualization="True"
			IsReadOnly="True"
			ItemsSource="{Binding}"
			RowStyle="{StaticResource DataGridRowStyle}"
			SelectedItem="{Binding ToolbarViewModel.Selected, ElementName=VerificationsGridControl, Mode=TwoWay}"
			SelectionMode="Single">
			<DataGrid.InputBindings>
				<MouseBinding
					Command="{Binding ToolbarViewModel.PrintReport, ElementName=VerificationsGridControl, Mode=OneWay}"
					CommandParameter="{Binding Path=SelectedItem, ElementName=VerificationsDataGrid}"
					MouseAction="LeftDoubleClick" />
				<!--<MouseBinding
					Command="{}"
					CommandTarget="{StaticResource ActionMenuItemsPopupBox}"
					MouseAction="RightClick" />-->
			</DataGrid.InputBindings>
			<DataGrid.Columns>
				<DataGridTemplateColumn
					x:Name="ActionMenuPopupCell"
					Width="Auto"
					CellTemplate="{StaticResource ActionMenuItemsPopupBox}" />

				<DataGridTemplateColumn
					Width="80"
					CanUserResize="False"
					Header=""
					HeaderStyle="{StaticResource DataGridColumnHeadersStyle}"
					SortMemberPath="Verified">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<materialDesign:PackIcon x:Name="VerifiedStatusIcon" Style="{StaticResource PassFailIcon}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn
					Width="Auto"
					Header="Device"
					HeaderStyle="{StaticResource DataGridColumnHeadersStyle}"
					SortMemberPath="Device.DeviceType.Name">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>

							<StackPanel
								Margin="4,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Orientation="Vertical">
								<TextBlock
									x:Name="DeviceTypeTextBlock"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									FontSize="24"
									Text="{Binding Device.DeviceType.Name, Mode=OneTime}" />
								<!--<TextBlock
                                    x:Name="CompositionTypeTextBlock"
                                    HorizontalAlignment="Left"
                                    Text="{Binding Device.Items.SiteInfo.CompositionType, Mode=OneTime}" />-->


								<TextBlock
									x:Name="DriveTypeTextBlock"
									HorizontalAlignment="Left"
									Text="{Binding Device.DriveType, Mode=OneTime}" />


							</StackPanel>


						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>

				</DataGridTemplateColumn>

				<materialDesign:DataGridTextColumn
					x:Name="InventoryNumberColumn"
					Binding="{Binding Device.Items.SiteInfo.SiteId2, Mode=OneTime}"
					Header="Inventory #" />

				<materialDesign:DataGridTextColumn
					x:Name="SerialNumberColumn"
					Binding="{Binding Device.Items.SiteInfo.SerialNumber, Mode=OneTime}"
					Header="Serial #" />

				<materialDesign:DataGridTextColumn
					x:Name="CompositionTypeTextBlock"
					Binding="{Binding Device.Items.SiteInfo.CompositionType, Mode=OneTime}"
					CellStyle="{StaticResource CenteredGridCellStyle}"
					Header="Composition" />

				<materialDesign:DataGridTextColumn
					x:Name="DateTestedColumn"
					Binding="{Binding TestDateTime, Mode=OneTime}"
					Header="Date Tested" />

				<materialDesign:DataGridTextColumn
					x:Name="DriveTypeColumn"
					Binding="{Binding Device.Items.Volume.DriveRateDescription, Mode=OneTime}"
					Header="Drive Rate" />
				<materialDesign:DataGridTextColumn
					x:Name="MeterTypeColumn"
					Binding="{Binding Device.Items.RotaryMeter.MeterType.Description, Mode=OneTime}"
					Header="Meter Type" />
				<materialDesign:DataGridTextColumn
					x:Name="JobIdColumn"
					Binding="{Binding JobId, Mode=OneTime}"
					Header="Job #"
					SortMemberPath="" />

				<materialDesign:DataGridTextColumn
					x:Name="EmployeeColumn"
					Binding="{Binding EmployeeId, Mode=OneTime}"
					Header="Employee" />

				<materialDesign:DataGridTextColumn
					x:Name="ExportedColumn"
					Binding="{Binding ExportedDateTime, Mode=OneTime}"
					Header="Exported" />

				<materialDesign:DataGridTextColumn
					x:Name="ArchivedColumn"
					Binding="{Binding Archived, Mode=OneTime}"
					Header="Archived" />


				<DataGridTemplateColumn Width="*">

					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate />
					</DataGridTemplateColumn.CellTemplate>

				</DataGridTemplateColumn>

			</DataGrid.Columns>

		</DataGrid>
	</Grid>
</UserControl>
